import{_ as e,o as i,c as a,e as l}from"./app-72993491.js";const r={},t=l('<h1 id="大数据" tabindex="-1"><a class="header-anchor" href="#大数据" aria-hidden="true">#</a> 大数据</h1><p>32位无符号整数的范围是0~4,294,967,295，现在有一个正好包含40亿个无符号整数的文件，所以在整个范围中必然存在没出现过的数。可以使用最多1GB的内存，怎么找到所有末出现过的数？</p><p>可以使用位图，每一位代表一个数，用500M内存即可</p><p>【进阶】</p><p>内存限制为 10MB，但是只用找到一个没出现过的数即可</p><p>方法一：选定范围，统计这个范围出现数的次数，一个范围一个范围的试，总有一范围是不满的<br> 方法二：二分，哪边不满</p><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><ol><li>哈希函数可以把数据按照种类均匀分流</li><li>布隆过滤器用于集合的建立与查询，并可以节省大量空间</li><li>一致性哈希解决数据服务器的负载管理问题</li><li>利用并查集结构做岛问题的并行计算 map reduce</li><li>位图解决某一范围上数字的出现情况，并可以节省大量空间</li><li>利用分段统计思想、并进一步节省大量空间</li><li>利用堆、外排序来做多个处理单元的结果合并</li></ol>',8),c=[t];function o(_,n){return i(),a("div",null,c)}const s=e(r,[["render",o],["__file","013大数据.html.vue"]]);export{s as default};
