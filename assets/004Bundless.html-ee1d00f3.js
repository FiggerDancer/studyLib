import{_ as t,r as e,o as p,c as o,b as s,d as n,a as l,e as c}from"./app-72993491.js";const i={},u=s("h1",{id:"bundless",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#bundless","aria-hidden":"true"},"#"),n(" Bundless")],-1),r=s("p",null,"通过 script[type=module]，可直接在浏览器中使用原生 ESM。这也使得前端不打包 (Bundless) 成为可能。",-1),d=s("p",null,"由于前端跑在浏览器中，因此它也只能从 URL 中引入 Package",-1),k={href:"https://cdn.sykpack.dev/lodash",target:"_blank",rel:"noopener noreferrer"},m=s("br",null,null,-1),v=c(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> lodash <span class="token keyword">from</span> <span class="token string">&quot;https://cdn.skypack.dev/lodash&quot;</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="importmap" tabindex="-1"><a class="header-anchor" href="#importmap" aria-hidden="true">#</a> ImportMap</h2><p>Http Import 每次都需要输入完全的 URL，相对以前的裸导入 (bare import specifiers)，很不太方便，</p><p>在 ESM 中，可通过 importmap 使得裸导入可正常工作:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>importmap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;imports&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&quot;lodash&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://cdn.skypack.dev/lodash&quot;</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;ms&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://cdn.skypack.dev/ms&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>导入子路径</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>importmap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;imports&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&quot;lodash&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://cdn.skypack.dev/lodash&quot;</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;lodash/&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://cdn.skypack.dev/lodash/&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token keyword">get</span> <span class="token keyword">from</span> <span class="token string">&quot;lodash/get.js&quot;</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="importassertion" tabindex="-1"><a class="header-anchor" href="#importassertion" aria-hidden="true">#</a> ImportAssertion</h2><p>通过 script[type=module]，不仅可引入 Javascript 资源，甚至可以引入 JSON/CSS，示例如下</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> data <span class="token keyword">from</span> <span class="token string">&quot;./data.json&quot;</span> <span class="token keyword">assert</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;json&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
 
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="与bundle区别" tabindex="-1"><a class="header-anchor" href="#与bundle区别" aria-hidden="true">#</a> 与Bundle区别</h2><table><thead><tr><th></th><th>Bundle模式</th><th>Bundleless模式</th></tr></thead><tbody><tr><td>项目启动</td><td>完整打包项目</td><td>启动 devServer，启动快</td></tr><tr><td>浏览器加载</td><td>等待打包完成，加载对应bundle</td><td>直接发起请求，映射到本地文件</td></tr><tr><td>本地文件更新</td><td>重新打包bundle</td><td>重新请求单个文件</td></tr></tbody></table><h2 id="bundless-优势" tabindex="-1"><a class="header-anchor" href="#bundless-优势" aria-hidden="true">#</a> Bundless 优势</h2><p>vite一开始就将应用中的模块分为依赖和源码，并以此改进开发服务器启动时间。</p><ol><li>依赖 大多数时间不会变动，将采用esbuild预构建（同时也是为了解决cjs，和小包多的情况。例如，lodash-es 有超过 600 个内置模块！），并缓存</li><li>源码 并不是所有源码都被同时加载，例如路由等，vite只在浏览器请求源码时进行相应的转换并按需提供源码。根据情景动态导入代码</li><li>更新缓慢 传统的webpack打包工具热更新虽然只需要替换自己这个模块，但是随着应用增大性能显著性下降，vite热更新只在esm上执行，编辑一个文件，vite只需要精准的使已编辑的模块与其最近的HMR边界之间的链失活，使得无论应用大小如何，都可以快速更新，vite同时利用http头加速整个页面的重新加载，源码模块请求根据304 Not Modified 进行协商缓存，依赖模块请求则会通过 Cache-Control:max-age=31536000,immutable 进行强缓存</li></ol><h2 id="bundless-劣势" tabindex="-1"><a class="header-anchor" href="#bundless-劣势" aria-hidden="true">#</a> Bundless 劣势</h2><ol><li>尽管原生 ESM 现在得到了广泛支持，但由于嵌套导入会导致额外的网络往返，在生产环境中发布未打包的 ESM 仍然效率低下（即使使用 HTTP/2）。为了在生产环境中获得最佳的加载性能，最好还是将代码进行 tree-shaking、懒加载和 chunk 分割（以获得更好的缓存）。</li><li>要确保开发服务器和生产环境构建之间的最优输出和行为一致并不容易。某些时候开发环境和生产环境不一致，比如因为引入一些具有副作用的包或者css，先后引入的顺序在开发环境和生产环境有时是不一致的</li></ol>`,17);function h(g,b){const a=e("ExternalLinkIcon");return p(),o("div",null,[u,r,d,s("p",null,[n("绝对路径: "),s("a",k,[n("https://cdn.sykpack.dev/lodash"),l(a)]),m,n(" 相对路径: ./lib.js")]),v])}const y=t(i,[["render",h],["__file","004Bundless.html.vue"]]);export{y as default};
