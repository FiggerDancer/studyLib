import{_ as n,o as s,c as a,e as t}from"./app-72993491.js";const e={},p=t(`<h1 id="nestjs中的装饰器" tabindex="-1"><a class="header-anchor" href="#nestjs中的装饰器" aria-hidden="true">#</a> NestJS中的装饰器</h1><h2 id="module-声明模块" tabindex="-1"><a class="header-anchor" href="#module-声明模块" aria-hidden="true">#</a> @Module 声明模块</h2><h2 id="controller-controller" tabindex="-1"><a class="header-anchor" href="#controller-controller" aria-hidden="true">#</a> @Controller controller</h2><p>指定Controller的生效路径</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Controller</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> host<span class="token operator">:</span> <span class="token string">&#39;:host.0.0.1&#39;</span><span class="token punctuation">,</span> path<span class="token operator">:</span> <span class="token string">&#39;aaa&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AaaController</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这时候你会发现只有 host 满足 xx.0.0.1 的时候才会路由到这个 controller。</p><h2 id="injectable-注入" tabindex="-1"><a class="header-anchor" href="#injectable-注入" aria-hidden="true">#</a> @Injectable 注入</h2><h2 id="optional-参数可选" tabindex="-1"><a class="header-anchor" href="#optional-参数可选" aria-hidden="true">#</a> @Optional 参数可选</h2><h2 id="global-全局" tabindex="-1"><a class="header-anchor" href="#global-全局" aria-hidden="true">#</a> @Global 全局</h2><h2 id="catch-捕获异常" tabindex="-1"><a class="header-anchor" href="#catch-捕获异常" aria-hidden="true">#</a> @Catch 捕获异常</h2><h2 id="usefilters-过滤器抛错" tabindex="-1"><a class="header-anchor" href="#usefilters-过滤器抛错" aria-hidden="true">#</a> @UseFilters 过滤器抛错</h2><h2 id="useguards-守卫" tabindex="-1"><a class="header-anchor" href="#useguards-守卫" aria-hidden="true">#</a> @UseGuards 守卫</h2><h2 id="useinterceptors-拦截器" tabindex="-1"><a class="header-anchor" href="#useinterceptors-拦截器" aria-hidden="true">#</a> @UseInterceptors 拦截器</h2><h2 id="usepipes-pipe管道" tabindex="-1"><a class="header-anchor" href="#usepipes-pipe管道" aria-hidden="true">#</a> @UsePipes pipe管道</h2><h2 id="param" tabindex="-1"><a class="header-anchor" href="#param" aria-hidden="true">#</a> @Param</h2><p>取 /xxx/111</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Controller</span> <span class="token punctuation">{</span>
    <span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token string">&#39;/xxx/:aaa&#39;</span><span class="token punctuation">)</span>
    <span class="token function">getHello2</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">Param</span></span><span class="token punctuation">(</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">,</span> ParseIntPipe<span class="token punctuation">)</span> aaa<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token decorator"><span class="token at operator">@</span><span class="token function">Query</span></span><span class="token punctuation">(</span><span class="token string">&#39;bbb&#39;</span><span class="token punctuation">,</span> ParseBoolPipe<span class="token punctuation">)</span> bbb<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> aaa<span class="token punctuation">,</span> <span class="token keyword">typeof</span> bbb<span class="token punctuation">)</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>aaa<span class="token punctuation">,</span> bbb<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="query" tabindex="-1"><a class="header-anchor" href="#query" aria-hidden="true">#</a> @Query</h2><h2 id="post" tabindex="-1"><a class="header-anchor" href="#post" aria-hidden="true">#</a> @Post</h2><h2 id="body-取到body部分" tabindex="-1"><a class="header-anchor" href="#body-取到body部分" aria-hidden="true">#</a> @Body 取到body部分</h2><p>我们一般用dto的class来接受请求体里的参数</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">AaaDto</span> <span class="token punctuation">{</span>
    a<span class="token operator">:</span> <span class="token builtin">number</span>
    b<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>nest会实例化一个dto对象</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;a&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;b&quot;</span><span class="token operator">:</span> <span class="token number">2</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="put" tabindex="-1"><a class="header-anchor" href="#put" aria-hidden="true">#</a> @Put</h2><h2 id="delete" tabindex="-1"><a class="header-anchor" href="#delete" aria-hidden="true">#</a> @Delete</h2><h2 id="patch" tabindex="-1"><a class="header-anchor" href="#patch" aria-hidden="true">#</a> @Patch</h2><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> @Options</h2><h2 id="head" tabindex="-1"><a class="header-anchor" href="#head" aria-hidden="true">#</a> @Head</h2><h2 id="setmetadata" tabindex="-1"><a class="header-anchor" href="#setmetadata" aria-hidden="true">#</a> @SetMetadata</h2><p>handler和class可以通过@SetMetadata指定metadata，然后在guard或者interceptor中取出</p><h2 id="headers" tabindex="-1"><a class="header-anchor" href="#headers" aria-hidden="true">#</a> @Headers</h2><p>可以通过它取某个请求头或者全部请求头</p><h2 id="ip" tabindex="-1"><a class="header-anchor" href="#ip" aria-hidden="true">#</a> @Ip</h2><p>通过它获取请求的ip</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token string">&#39;/ip&#39;</span><span class="token punctuation">)</span>
<span class="token function">ip</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">Ip</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> ip<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="session" tabindex="-1"><a class="header-anchor" href="#session" aria-hidden="true">#</a> @Session</h2><p>通过它获取session对象</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token string">&#39;/session&#39;</span><span class="token punctuation">)</span>
<span class="token function">session</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">Session</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> session<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>session<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        session<span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">0</span> 
    <span class="token punctuation">}</span>
    session<span class="token punctuation">.</span>count <span class="token operator">=</span> session<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span>
    <span class="token keyword">return</span> session<span class="token punctuation">.</span>count
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但要使用session需要安装一个express中间件，express-session</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> NestFactory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/core&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> AppModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./app.module&#39;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> session <span class="token keyword">from</span> <span class="token string">&#39;express-session&#39;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">await</span> NestFactory<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>AppModule<span class="token punctuation">)</span>
    <span class="token comment">// 指定加密的密钥和cookie的存活时间</span>
    app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">session</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        secret<span class="token operator">:</span> <span class="token string">&#39;lxy123&#39;</span><span class="token punctuation">,</span>
        cookie<span class="token operator">:</span> <span class="token punctuation">{</span>
            maxAge<span class="token operator">:</span> <span class="token number">100000</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hostparam" tabindex="-1"><a class="header-anchor" href="#hostparam" aria-hidden="true">#</a> HostParam</h2><p>获取域名参数</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Controller<span class="token punctuation">,</span> Get<span class="token punctuation">,</span> HostParam <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Controller</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> host<span class="token operator">:</span> <span class="token string">&#39;:host.0.0.1&#39;</span><span class="token punctuation">,</span> path<span class="token operator">:</span> <span class="token string">&#39;aaa&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AaaController</span> <span class="token punctuation">{</span>
    <span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token string">&#39;bbb&#39;</span><span class="token punctuation">)</span>
    <span class="token function">hello</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">HostParam</span></span><span class="token punctuation">(</span><span class="token string">&#39;host&#39;</span><span class="token punctuation">)</span> host<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> host
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="req-或者-request" tabindex="-1"><a class="header-anchor" href="#req-或者-request" aria-hidden="true">#</a> @Req 或者 @Request</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">AaaController</span> <span class="token punctuation">{</span>
    <span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token string">&#39;ccc&#39;</span><span class="token punctuation">)</span> 
    <span class="token function">ccc</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">Req</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> req<span class="token operator">:</span> Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>hostname<span class="token punctuation">)</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="res-或-response" tabindex="-1"><a class="header-anchor" href="#res-或-response" aria-hidden="true">#</a> @Res 或 @Response</h2><p>如果不返回响应，服务器会一直没有响应，可以自己返回响应</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">AaaController</span> <span class="token punctuation">{</span>
    <span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token string">&#39;ddd&#39;</span><span class="token punctuation">)</span> 
    <span class="token function">ddd</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">Res</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> res<span class="token operator">:</span> Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 如果不返回响应，服务器会一直没有响应</span>
        <span class="token comment">// 你可以自己返回响应</span>
        res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;ddd&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Nest这么设计是为了防止你的响应和Nest返回的响应冲突，通过passthrough参数告诉Nest，自己不会返回响应</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">AaaController</span> <span class="token punctuation">{</span>
    <span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token string">&#39;ddd&#39;</span><span class="token punctuation">)</span> 
    <span class="token function">ddd</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">Res</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> passthrough<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> res<span class="token operator">:</span> Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&#39;ddd&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="next" tabindex="-1"><a class="header-anchor" href="#next" aria-hidden="true">#</a> @Next</h2><p>当你有两个handler来处理同一个路由的时候，可以在第一个handler里注入next，调用它来请求转发到第二个handler</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">AaaController</span> <span class="token punctuation">{</span>
    <span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token string">&#39;eee&#39;</span><span class="token punctuation">)</span>
    <span class="token function">eee</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">Next</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> next<span class="token operator">:</span> NextFunction<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;handler1&#39;</span><span class="token punctuation">)</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token string">&#39;111&#39;</span>
    <span class="token punctuation">}</span>

    <span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token string">&#39;eee&#39;</span><span class="token punctuation">)</span>
    <span class="token function">eee2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;handler2&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token string">&#39;eee&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="httpcode" tabindex="-1"><a class="header-anchor" href="#httpcode" aria-hidden="true">#</a> @HttpCode</h2><p>handler默认返回200状态码，该装饰器可修改</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">AaaController</span> <span class="token punctuation">{</span>
    <span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token string">&#39;fff&#39;</span><span class="token punctuation">)</span>
    <span class="token decorator"><span class="token at operator">@</span><span class="token function">HttpCode</span></span><span class="token punctuation">(</span><span class="token number">222</span><span class="token punctuation">)</span>
    <span class="token function">fff</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&#39;hello&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="header" tabindex="-1"><a class="header-anchor" href="#header" aria-hidden="true">#</a> @Header</h2><p>修改response header</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token string">&#39;ggg&#39;</span><span class="token punctuation">)</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Header</span></span><span class="token punctuation">(</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bbb&#39;</span><span class="token punctuation">)</span>
<span class="token function">ggg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;hello&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="redirect装饰器重定向" tabindex="-1"><a class="header-anchor" href="#redirect装饰器重定向" aria-hidden="true">#</a> @Redirect装饰器重定向</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token string">&#39;hhh&#39;</span><span class="token punctuation">)</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Redirect</span></span><span class="token punctuation">(</span><span class="token string">&#39;https://lxy951101.github.io/studyLib/&#39;</span><span class="token punctuation">)</span>
<span class="token function">hhh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="指定渲染引擎" tabindex="-1"><a class="header-anchor" href="#指定渲染引擎" aria-hidden="true">#</a> 指定渲染引擎</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> NestFactory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/core&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> AppModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./app.module&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> NestExpressApplication <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/platform-express&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> join <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">await</span> NestFactory<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">create</span><span class="token generic class-name"><span class="token operator">&lt;</span>NestExpressApplication<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>AppModule<span class="token punctuation">)</span><span class="token punctuation">;</span>

  app<span class="token punctuation">.</span><span class="token function">useStaticAssets</span><span class="token punctuation">(</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;..&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;public&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  app<span class="token punctuation">.</span><span class="token function">setBaseViewsDir</span><span class="token punctuation">(</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;..&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;views&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  app<span class="token punctuation">.</span><span class="token function">setViewEngine</span><span class="token punctuation">(</span><span class="token string">&#39;hbs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="合并装饰器" tabindex="-1"><a class="header-anchor" href="#合并装饰器" aria-hidden="true">#</a> 合并装饰器</h2><p>applyDecorators</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> applyDecorators<span class="token punctuation">,</span> Get<span class="token punctuation">,</span> UseGuards <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Aaa <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./aaa.decorator&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> AaaGuard <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./aaa.guard&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">Bbb</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> role<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">applyDecorators</span><span class="token punctuation">(</span>
    <span class="token function">Get</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">Aaa</span><span class="token punctuation">(</span>role<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">UseGuards</span><span class="token punctuation">(</span>AaaGuard<span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自定义装饰器" tabindex="-1"><a class="header-anchor" href="#自定义装饰器" aria-hidden="true">#</a> 自定义装饰器</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> MyQuery <span class="token operator">=</span> <span class="token function">createParamDecorator</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> ctx<span class="token operator">:</span> ExecutionContext<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> request<span class="token operator">:</span> Request <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">switchToHttp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> request<span class="token punctuation">.</span>query<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="metadata和reflector" tabindex="-1"><a class="header-anchor" href="#metadata和reflector" aria-hidden="true">#</a> Metadata和Reflector</h2><ol><li>Reflect.defineMetadata</li><li>Reflect.getMetadata</li></ol><p>现在NestJS中是依赖了ts的emitDecoratorMetadata编译选项</p><h2 id="创建循环依赖" tabindex="-1"><a class="header-anchor" href="#创建循环依赖" aria-hidden="true">#</a> 创建循环依赖</h2><p>可以通过forwardRef</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> forwardRef<span class="token punctuation">,</span> Module <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> BbbModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;src/bbb/bbb.module&#39;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    imports<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token function">forwardRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> BbbModule<span class="token punctuation">)</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> forwardRef<span class="token punctuation">,</span> Module <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> AaaModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;src/aaa/aaa.module&#39;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    imports<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token function">forwardRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> AaaModule<span class="token punctuation">)</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,76),o=[p];function c(i,l){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","002nestjs装饰器.html.vue"]]);export{r as default};
